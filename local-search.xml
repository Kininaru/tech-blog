<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>goroutine</title>
    <link href="/goroutine/"/>
    <url>/goroutine/</url>
    
    <content type="html"><![CDATA[<p>这篇文章记录了我对 <code>goroutine</code> 的一些理解。</p><h2 id="goroutine"><a href="#goroutine" class="headerlink" title="goroutine"></a>goroutine</h2><p>Go 语言使用 goroutine  处理并发。每个 Go 程序都有一个最基础的 goroutine，main 函数执行在这个 goroutine 上。同时，可以在代码中用 <code>go</code> 关键字开启一个新的 goroutine。</p><p>Go 程序生命周期中，最长的 goroutine 是 main 函数所在的 goroutine。这个 goroutine 一旦结束，整个程序的所有 goroutine 都会结束，不论它们有没有完成任务。</p><h2 id="Channel"><a href="#Channel" class="headerlink" title="Channel"></a>Channel</h2><p>Go 语言中，不同的 goroutine 之间可以通过 Channel 通信。</p><p>每个 Channel 都有两个状态：<code>buffered</code> 和 <code>unbuffered</code> ，定义 Channel 时可以指定初始状态。</p><p>改变 Channel 状态的运算符是 <code>&lt;-</code>。这个运算符左边的 Channel 会被设为 <code>unbuffered</code> 状态，右边的 Channel 会被设为 <code>buffered</code> 状态。</p><h3 id="当一个-goroutine-想要设置一个-Channel-的状态时，如果："><a href="#当一个-goroutine-想要设置一个-Channel-的状态时，如果：" class="headerlink" title="当一个 goroutine 想要设置一个 Channel 的状态时，如果："></a>当一个 goroutine 想要设置一个 Channel 的状态时，如果：</h3><ul><li><p>这个 Channel 的目标状态与当前状态不同：</p><p>设置会立马生效，Channel 的状态立刻改变。</p></li><li><p>这个 Channel 的目标状态与当前状态相同：</p><p>这个设置不会立刻生效。当前 goroutine 会等待这个 Channel 变为与当前不同的状态，然后再改变这个 Channel 的状态。</p></li><li><p>这个 Channel 目标状态与当前状态相同，且没有其他 goroutine 正在运行：</p><p>Go Runtime 会报错，因为当前 goroutine 永远不可能等到 Channel 到达自己想要的状态。整个程序已经锁死在这里。</p></li></ul><p>使用 Channel 的这个特性，可以确保不同 goroutine 之内代码的执行顺序受控制。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hello-world/"/>
    <url>/hello-world/</url>
    
    <content type="html"><![CDATA[<p>一直不知道写啥，所以就只有这一篇 Hello World…</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>about</title>
    <link href="/about/"/>
    <url>/about/</url>
    
    <content type="html"><![CDATA[<h1 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h1>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
